{"ast":null,"code":"var _jsxFileName = \"/Users/kimBARELY/Desktop/reddit/reddit-starter/src/components/Posts.js\";\nimport React from 'react';\nimport CommentBox from './CommentBox';\nimport Comments from './Comments';\n\nconst diff_hours = time => {\n  let diff = (new Date().getTime() - new Date(time).getTime()) / 1000;\n  diff /= 60 * 60;\n  return Math.abs(Math.round(diff));\n};\n\nconst initialState = [{\n  id: '0',\n  subReddit: 'pugs',\n  poster: 'DukeOfWindsor',\n  timeOfPost: 'Sat Sep 14 2019 19:03:20 GMT-0700 (Pacific Daylight Time)',\n  title: 'Angry pug',\n  src: 'https://static-cdn.jtvnw.net/jtv_user_pictures/4376924f-8207-49a6-85a4-60f2fe20ce91-profile_image-300x300.png',\n  upvotes: 10000,\n  downvotes: 300,\n  comments: []\n}];\n\nconst Posts = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, initialState.map(post => /*#__PURE__*/React.createElement(\"div\", {\n    key: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, post.title), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"Submitted \", diff_hours(post.timeOfPost), \" hours ago by \", post.poster, \" to r/\", post.subReddit), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Reddit post\",\n    src: post.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"Votes: \", post.upvotes - post.downvotes), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, \" \\u2B06\\uFE0F \")), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"Down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }, \" \\u2B07\\uFE0F \")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(CommentBox, {\n    postId: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Comments, {\n    comments: post.comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/Users/kimBARELY/Desktop/reddit/reddit-starter/src/components/Posts.js"],"names":["React","CommentBox","Comments","diff_hours","time","diff","Date","getTime","Math","abs","round","initialState","id","subReddit","poster","timeOfPost","title","src","upvotes","downvotes","comments","Posts","props","map","post"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,UAAU,GAAGC,IAAI,IACtB;AACC,MAAIC,IAAI,GAAE,CAAC,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAID,IAAJ,CAASF,IAAT,EAAeG,OAAf,EAAxB,IAAoD,IAA9D;AACAF,EAAAA,IAAI,IAAK,KAAK,EAAd;AACA,SAAOG,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,KAAL,CAAWL,IAAX,CAAT,CAAP;AACA,CALF;;AAOC,MAAMM,YAAY,GAAG,CAClB;AACEC,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,SAAS,EAAE,MAFb;AAGEC,EAAAA,MAAM,EAAE,eAHV;AAIEC,EAAAA,UAAU,EAAE,2DAJd;AAKEC,EAAAA,KAAK,EAAE,WALT;AAMEC,EAAAA,GAAG,EAAE,+GANP;AAOEC,EAAAA,OAAO,EAAE,KAPX;AAQEC,EAAAA,SAAS,EAAE,GARb;AASEC,EAAAA,QAAQ,EAAE;AATZ,CADkB,CAArB;;AAcD,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,YAAY,CAACY,GAAb,CAAiBC,IAAI,iBAClB;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACZ,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKY,IAAI,CAACR,KAAV,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeb,UAAU,CAACqB,IAAI,CAACT,UAAN,CAAzB,oBAA0DS,IAAI,CAACV,MAA/D,YAA6EU,IAAI,CAACX,SAAlF,CAFJ,eAGI;AAAK,IAAA,GAAG,EAAC,aAAT;AAAuB,IAAA,GAAG,EAAEW,IAAI,CAACP,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYO,IAAI,CAACN,OAAL,GAAeM,IAAI,CAACL,SAAhC,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAQ;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAR,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAQ;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAR,CANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAOU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPV,eAQI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEK,IAAI,CAACZ,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eASI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEY,IAAI,CAACJ,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADH,CADL,CADJ;AAmCH,CApCD;;AAsCA,eAAeC,KAAf","sourcesContent":["import React from 'react';\r\nimport CommentBox from './CommentBox'\r\nimport Comments from './Comments'\r\n\r\nconst diff_hours = time =>\r\n {\r\n  let diff =(new Date().getTime() - new Date(time).getTime()) / 1000;\r\n  diff /= (60 * 60);\r\n  return Math.abs(Math.round(diff));\r\n }\r\n\r\n const initialState = [\r\n    {\r\n      id: '0',\r\n      subReddit: 'pugs',\r\n      poster: 'DukeOfWindsor',\r\n      timeOfPost: 'Sat Sep 14 2019 19:03:20 GMT-0700 (Pacific Daylight Time)',\r\n      title: 'Angry pug',\r\n      src: 'https://static-cdn.jtvnw.net/jtv_user_pictures/4376924f-8207-49a6-85a4-60f2fe20ce91-profile_image-300x300.png',\r\n      upvotes: 10000,\r\n      downvotes: 300,\r\n      comments: []\r\n    }\r\n  ]\r\n\r\nconst Posts = props => {\r\n    return (\r\n        <div>\r\n            {initialState.map(post => (\r\n                <div key={post.id}>\r\n                    <h3>{post.title}</h3>\r\n                    <h5>Submitted {diff_hours(post.timeOfPost)} hours ago by {post.poster} to r/{post.subReddit}</h5>\r\n                    <img alt=\"Reddit post\" src={post.src}/>\r\n                    <h4>Votes: {post.upvotes - post.downvotes}</h4>\r\n                    <button><span role=\"img\" aria-label=\"Up\"> ⬆️ </span></button>\r\n                    <button><span role=\"img\" aria-label=\"Down\"> ⬇️ </span></button>\r\n                    <br /><br />\r\n                    <CommentBox postId={post.id} />\r\n                    <Comments comments={post.comments} />\r\n                    <hr />\r\n                </div >\r\n            ))}\r\n            {/* {props.posts.map(post => (\r\n                <div key={post.id}>\r\n                    <h3>{post.title}</h3>\r\n                    <h3>r/{post.subReddit}</h3>\r\n                    <h3>u/{post.poster}</h3>\r\n                    <h3>Posted {diff_hours(post.time)} hours ago</h3>\r\n                    <img alt=\"Reddit post\" src={post.src}/>\r\n                    <h4>Votes: {post.upvotes - post.downvotes}</h4>\r\n                    <button><span role=\"img\" aria-label=\"Up\"> ⬆️ </span></button>\r\n                    <button><span role=\"img\" aria-label=\"Down\"> ⬇️ </span></button>\r\n                    <br /><br />\r\n                    <CommentBox postId={post.id} />\r\n                    <Comments comments={post.comments} />\r\n                    <hr />\r\n                </div >\r\n            ))} */}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}