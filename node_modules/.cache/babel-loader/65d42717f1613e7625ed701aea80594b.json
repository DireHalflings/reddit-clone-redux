{"ast":null,"code":"var _jsxFileName = \"/Users/kimBARELY/Desktop/reddit/reddit-starter/src/components/Posts.js\";\nimport React from 'react';\nimport CommentBox from './CommentBox';\nimport Comments from './Comments';\nimport { useSelector } from 'react-redux';\n\nconst diff_hours = time => {\n  let diff = (new Date().getTime() - new Date(time).getTime()) / 1000;\n  diff /= 60 * 60;\n  return Math.abs(Math.round(diff));\n};\n\nconst Posts = props => {\n  const posts = useSelector(state => state);\n  console.log(posts);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default Posts;","map":{"version":3,"sources":["/Users/kimBARELY/Desktop/reddit/reddit-starter/src/components/Posts.js"],"names":["React","CommentBox","Comments","useSelector","diff_hours","time","diff","Date","getTime","Math","abs","round","Posts","props","posts","state","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,UAAU,GAAGC,IAAI,IACtB;AACC,MAAIC,IAAI,GAAE,CAAC,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAID,IAAJ,CAASF,IAAT,EAAeG,OAAf,EAAxB,IAAoD,IAA9D;AACAF,EAAAA,IAAI,IAAK,KAAK,EAAd;AACA,SAAOG,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,KAAL,CAAWL,IAAX,CAAT,CAAP;AACA,CALF;;AAQA,MAAMM,KAAK,GAAGC,KAAK,IAAI;AAEnB,QAAMC,KAAK,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAV,CAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAmCH,CAxCD;;AA0CA,eAAeF,KAAf","sourcesContent":["import React from 'react';\r\nimport CommentBox from './CommentBox';\r\nimport Comments from './Comments';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst diff_hours = time =>\r\n {\r\n  let diff =(new Date().getTime() - new Date(time).getTime()) / 1000;\r\n  diff /= (60 * 60);\r\n  return Math.abs(Math.round(diff));\r\n }\r\n\r\n\r\nconst Posts = props => {\r\n\r\n    const posts = useSelector(state => state)\r\n    console.log(posts)\r\n\r\n    return (\r\n        <div>\r\n            {/* {initialState.map(post => (\r\n                <div key={post.id}>\r\n                    <h3>{post.title}</h3>\r\n                    <h5>Submitted {diff_hours(post.timeOfPost)} hours ago by {post.poster} to r/{post.subReddit}</h5>\r\n                    <img alt=\"Reddit post\" src={post.src}/>\r\n                    <h4>Votes: {post.upvotes - post.downvotes}</h4>\r\n                    <button><span role=\"img\" aria-label=\"Up\"> ⬆️ </span></button>\r\n                    <button><span role=\"img\" aria-label=\"Down\"> ⬇️ </span></button>\r\n                    <br /><br />\r\n                    <CommentBox postId={post.id} />\r\n                    <Comments comments={post.comments} />\r\n                    <hr />\r\n                </div >\r\n            ))} */}\r\n            {/* {props.posts.map(post => (\r\n                <div key={post.id}>\r\n                    <h3>{post.title}</h3>\r\n                    <h3>r/{post.subReddit}</h3>\r\n                    <h3>u/{post.poster}</h3>\r\n                    <h3>Posted {diff_hours(post.time)} hours ago</h3>\r\n                    <img alt=\"Reddit post\" src={post.src}/>\r\n                    <h4>Votes: {post.upvotes - post.downvotes}</h4>\r\n                    <button><span role=\"img\" aria-label=\"Up\"> ⬆️ </span></button>\r\n                    <button><span role=\"img\" aria-label=\"Down\"> ⬇️ </span></button>\r\n                    <br /><br />\r\n                    <CommentBox postId={post.id} />\r\n                    <Comments comments={post.comments} />\r\n                    <hr />\r\n                </div >\r\n            ))} */}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}